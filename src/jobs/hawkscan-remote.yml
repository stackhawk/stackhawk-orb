---
description: |
  This is the fastest way to run a scan of a known remote host.

  This job requires a StackHawk API key to be stored as HAWK_API_KEY (default).

  If you want to stand up a simple integration test locally, in the CircleCI build environment, you should use the
  stackhawk/hawkscan-local job instead.

docker:
  - image: <<parameters.docker-image>>

resource_class: <<parameters.resource-class>>

parameters:
  api-key:
    description: >
      Your StackHawk API key. Store your key as an environment variable in CircleCI and pass the name of the variable
      here.
    type: env_var_name
    default: "HAWK_API_KEY"
  configuration-files:
    description: >
      A list of HawkScan configuration files to load. Defaults to `stackhawk.yml`. To overlay multiple configuration
      files, separate them with spaces, e.g. `stackhawk1.yml stackhawk2.yml stackhawk3.yml`.
    type: string
    default: stackhawk.yml
  app-id:
    description: >
      Pass a value to the HawkScan runtime environment variable, APP_ID. You can use this environment variable in
      your HawkScan configuration file to dynamically set `app.applicationId`, or any other parameter.
    type: string
    default: ""
  host:
    description: >
      Pass a value to the HawkScan runtime environment variable, HOST. You can use this environment variable in
      your HawkScan configuration file to dynamically set `app.host`, or any other parameter.
    type: string
    default: ""
  env:
    description: >
      Pass a value to the HawkScan runtime environment variable, ENV. You can use this environment variable in
      your HawkScan configuration file to dynamically set `app.env`, or any other parameter.
    type: string
    default: ""
  username:
    description: >
      Pass a value to the HawkScan runtime environment variable, USERNAME. You can use this environment variable in
      your HawkScan configuration file to dynamically set `app.authentication.usernamePassword.scanUsername`, or any
      other parameter.
    type: string
    default: ""
  password:
    description: >
      Pass a value to the HawkScan runtime environment variable, PASSWORD. You can use this environment variable in
      your HawkScan configuration file to dynamically set `app.authentication.usernamePassword.scanPassword`, or any
      other parameter.
    type: string
    default: ""
  auth-token:
    description: >
      Pass a value to the HawkScan runtime environment variable, AUTH_TOKEN. You can use this environment variable in
      your HawkScan configuration file to dynamically set `app.authentication.external.value`, or any
      other parameter.
    type: string
    default: ""
  color:
    description: >
      Set to `true` if you want HawkScan to output in color. Color output may appear garbled in job output screens.
    type: boolean
    default: false
  docker-image:
    description: >
      The HawkScan container to download. Change this only if recommended by StackHawk Support.
    type: string
    default: stackhawk/hawkscan:latest
  resource-class:
    description: >
      Override the default `resource_class` (medium). See https://circleci.com/docs/2.0/configuration-reference/#resourceclass .
    type: string
    default: medium

environment:
  REPO_DIR: /home/zap/hawk

working_directory: /home/zap/hawk

steps:
  - checkout
  - run:
      name: HawkScan
      command: |
        echo 'export API_KEY=${<<parameters.api-key>>}' >> ${BASH_ENV}
        echo 'export NO_COLOR=<<parameters.color>>' >> ${BASH_ENV}
        <<#parameters.app-id>>echo 'export APP_ID=<<parameters.app-id>>' >> ${BASH_ENV}<</parameters.app-id>>
        <<#parameters.host>>echo 'export HOST=<<parameters.host>>' >> ${BASH_ENV}<</parameters.host>>
        <<#parameters.env>>echo 'export ENV=<<parameters.env>>' >> ${BASH_ENV}<</parameters.env>>
        <<#parameters.username>>echo 'export USERNAME=<<parameters.username>>' >> ${BASH_ENV}<</parameters.username>>
        <<#parameters.password>>echo 'export PASSWORD=<<parameters.password>>' >> ${BASH_ENV}<</parameters.password>>
        <<#parameters.auth-token>>echo 'export AUTH_TOKEN=<<parameters.auth-token>>' >> ${BASH_ENV}<</parameters.auth-token>>
        source ${BASH_ENV}
        shawk <<parameters.configuration-files>>
